{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","useState","goods","setGoods","isVisible","setVisibility","sort","sortBy","sortedGoods","goodA","goodB","localeCompare","length","className","type","onClick","reverse","map","good","ReactDOM","render","document","getElementById"],"mappings":"iOAGMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGWC,EAAgB,WAC3B,MAA0BC,mBAASF,GAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAAmCF,oBAAS,GAA5C,mBAAOG,EAAP,KAAkBC,EAAlB,KAUMC,EAAO,SAACC,GACZ,IAAMC,EAAW,YAAON,GAexB,OAbAM,EAAYF,MAAK,SAACG,EAAOC,GACvB,OAAQH,GACN,IAAK,QACH,OAAOE,EAAME,cAAcD,GAE7B,IAAK,SACH,OAAOD,EAAMG,OAASF,EAAME,OAE9B,QACE,OAAO,MAINT,EAASK,IAOlB,OACE,sBAAKK,UAAU,MAAf,UACE,+CACET,EAUE,mCACE,sBAAKS,UAAU,UAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAU,SACVE,QA9CA,WACdZ,EAAS,YAAID,GAAOc,YA0CR,qBAOA,wBACEF,KAAK,SACLD,UAAU,SACVE,QAAS,kBAAMT,EAAK,UAHtB,iCAOA,wBACEQ,KAAK,SACLD,UAAU,SACVE,QAAS,kBAAMT,EAAK,WAHtB,4BAOA,wBACEQ,KAAK,SACLD,UAAU,SACVE,QA5CF,WACZZ,EAASJ,IAwCG,sBAQF,6BACGG,EAAMe,KAAI,SAAAC,GAAI,OACb,6BACGA,GADMA,aA1CjB,wBACEJ,KAAK,SACLC,QAtCQ,WAChBV,GAAeD,IAmCT,uBCrDVe,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.fbfeec84.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nexport const App: React.FC = () => {\n  const [goods, setGoods] = useState(goodsFromServer);\n  const [isVisible, setVisibility] = useState(false);\n\n  const showGoods = () => {\n    setVisibility(!isVisible);\n  };\n\n  const reverse = () => {\n    setGoods([...goods].reverse());\n  };\n\n  const sort = (sortBy: string) => {\n    const sortedGoods = [...goods];\n\n    sortedGoods.sort((goodA, goodB) => {\n      switch (sortBy) {\n        case 'alpha':\n          return goodA.localeCompare(goodB);\n\n        case 'length':\n          return goodA.length - goodB.length;\n\n        default:\n          return 0;\n      }\n    });\n\n    return setGoods(sortedGoods);\n  };\n\n  const reset = () => {\n    setGoods(goodsFromServer);\n  };\n\n  return (\n    <div className=\"app\">\n      <h1>List of Goods</h1>\n      {!isVisible\n        ? (\n          <button\n            type=\"button\"\n            onClick={showGoods}\n          >\n            Start\n          </button>\n        )\n        : (\n          <>\n            <div className=\"wrapper\">\n              <div className=\"buttons\">\n                <button\n                  type=\"button\"\n                  className=\"button\"\n                  onClick={reverse}\n                >\n                  Reverse\n                </button>\n                <button\n                  type=\"button\"\n                  className=\"button\"\n                  onClick={() => sort('alpha')}\n                >\n                  Sort alphabetically\n                </button>\n                <button\n                  type=\"button\"\n                  className=\"button\"\n                  onClick={() => sort('length')}\n                >\n                  Sort by length\n                </button>\n                <button\n                  type=\"button\"\n                  className=\"button\"\n                  onClick={reset}\n                >\n                  Reset\n                </button>\n              </div>\n              <ul>\n                {goods.map(good => (\n                  <li key={good}>\n                    {good}\n                  </li>\n                ))}\n              </ul>\n            </div>\n          </>\n        )}\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}